1. Projects

Main part of the ALM shall be projects.


1.1. Project information

Projects shall contain this information:
- Project identification number that is unique over all projects
- A name (short text)
- A desctiption (text)
- State of the project (active or inactive/deleted/disabled)


1.2 Project trackers

A project shall be able to contain any number of trackers. Projects are free to decide how many trackers they need as well as the structure of of each tracker.


2. Trackers

Each project shall be able to contain trackers.


2.1. Tracker information

Trackers shall contain this information:
- Tracker identification number that is unique over all trackers in all projects
- A name (short text)
- A desctiption (text)
- A label that shall be used for referencing artifacts of this tracker
- State of the tracker (active or inactive/deleted/disabled)


2.2. Artifacts

Trackers shall contain artifacts. An artifact is a collection of (data) fields.


2.3. Fixed fields in artifacts

Trackers shall have a small set of fields that shall be present in each artifact:
- Artifact identification number that is unique over all artifacts in all projects and trackers
- A name (short text)
- ID of the user that created the artifact
- Timestamp when artifact was created
- ID of the last user that updated the artifact
- Timestamp when artifact was last updated
- State of the artifact (active or inactive/deleted/disabled)


2.4. Custom fields in artifacts

Trackers shall be able to contain a custom set of fields in each artifact for a specific tracker.

Each of these custom fields shall contain the following attributes:
- Field identification number that is unique over all fields in all projects and trackers
- A name (short text)
- A description (text)
- Other attributes that are specific to the field's type


2.5. Comments

Each artifact shall be able to contain comments. Comments shall contain the following information:
- User identification that posted the comment
- Timestamp when the comment was submitted
- Comment text


2.6. Editing comments

Comment could be edited. It has to be clear who edited the comment and when. It shall be possible to access all versions of the comment (from the original to the latest).


2.7. File attachments

There should be a possibility for attaching files to an artifact.


2.8. Links between artifacts

It shall be possible to link one artifact to another. Additionaly it shall be possible to define only a specific set of trackers where to which links can be made. The direction of linking shall be available.


2.9. Layout of fields in a tracker

A tracker shall contain information regarding layout of fields in a tracker.


2.10. Tracker reports

Trackers shall be able to list all artifacts of a tracker that match a specified filter. It shall be possible to define a set of filters and a relationship between them (AND, OR, NOT, <=, <, >, >=).


2.11. Workflow

Trackers shall be able to define transitions from one value of a field to another value of the same field. It shall also be possible to allow the transitions only if defined conditions are met (for example only specific users and user groups can make a transition, transition can be made only if a specific set of fields contains a specific set or range of values).


2.12. Actions on specific events

Trackers shall be able to define an action for some events. For example in transitions of a workflow.


2.13. Locking of and artifact

It shall be possible to lock an artifact so that it can no longer be updated untile the lock is released. This can be useful for protection of an artifact from accidental or unauthorised changes.


3. Users and user groups

Users and user groups shall be supported.


3.1. User information

Each user shall have the following information:
- User identification number that is unique over all projects
- User name
- Display name
- Email address
- Authentication method (basic user name/password, LDAP etc.)
- Authentication information specific to the authentication method
- State of the user (active or inactive/deleted/disabled)
- List of user groups that belong a specific user belongs to


3.2. User group information

Each user group shall have the following information:
- User group identification number that is unique over all projects
- User group name
- Display name
- Type of a user group (system, project)
- State of the user group (active or inactive/deleted/disabled)
- List of users that belong to a specific group
- Project ID to which a specific user group belongs to (only for project user groups)

System user groups shall be available to all projects, but project user groups shall only be available to a specific project.


3.3. Built-in users

There shall be only one built-in user "Administrator" that is part of the "Administrators" user group.

"Administrator" shall be used at least for initial administration until other administrators are added, but it shall not be possible to disable this user.


3.4. Built-in system user groups

There shall be these built-in system user groups:
- Administrators
- Users

"Administrators" user group shall be have complete access to all projects and to the complete system.

"Users" user group shall cotain all users that are registered on the system. All users shall be automatically added to this user group at regstration and it shall not be possible to remove them from this user group. They shall not have access to the core part of the system, but only to the projects they are added to.

All system user groups shall be available to all projects.


3.5. Built-in project user groups

Each project shall contain its own project user group.

There shall be these built-in system user groups:
- Project administrators
- Project users

"Project administrators" user group shall have full access to the project it belongs to.

"Project users" user group shall contain all users that are added to a project it belongs to.


4. Access control

System shall allow access to certain parts of the system only to authorised users and user groups.

There shall be different access permissions:
- Read (can only read data)
- Write (can read and write data)


4.1. Access to project

System shall limit access to project data only to the users in "Project administrators" user group and to users and user groups that are explicitly allowed access to project data.

Project data represents:
- Project information
- Trackers

Users with read access to the project shall be able to read the project information and access the list of trackers, but users with write access shall be able to modify the project information and create, delete (disable), and configure trackers.

Users in "Project administrators" user group shall have write access to the project and users in "Project users" user group shall have read access to the project.


4.2. Access to trackers

System shall allow granting read or write access to specific fields in a tracker to a specific set of users and user groups.


4.3. Access to specific artifacts

System shall allow granting read or write access to specific artifacts in a tracker to a specific set of users and user groups.


5. Version control

Each change in the system shall be trackable.


5.1. Accessing historical state of the system

It shall be possible to get a specific historical state of the system, except for users, user groups, and access control. Access to the historical state shall be read-only.

All information regarding users and user groups, including their permissions in the system, in a specific historical state of the system shall reflect their latest state.


5.2. Persistance

It shall not be possible to permenantly delete something in the system, only new data can be added to the system that can replace old data. For example changing of a name of an artifact shall produce a new data entry while the old data remains accessable through historic states.


5.3. Revisions

Each change in the system shall be marked with a revision number for the change. Revision number shall be unique for the complete system.

Each revision shall contain the following information:
- Revision number
- Timestamp of when the change was created
- User ID of the user that created the change


5.4. Tagging of a specific state of a project

It shall be possible to create a read-only snapshot of a project - a "tag".


5.5. Branching of a specific historical state of a project to a new project

It shall be possible to create branch (or a clone) of a specific historical state of a project to a new project.

For example all trackers and artifacts from that specific historical state of a project shall be copied to a new project. New IDs shall be creadted for all data that contains an ID and all references to these IDs in the new project shall be replaced with their new references while keeping the information of where it was copied from.


6. Integration with other systems

It shall be possible to integrate this system with other systems.


6.1. Integration with version control systems

It shall be possible to integrate a version control system (VCS, for example Subversion, Git etc.) with this system. Special "hooks" shall be required for integration.

For example a hook can be created to allow committing of a change in the VCS only if it is referencing an existing and active artifact in a tracker in a specific project and if the reference is valid then the reference can be linked to that artifact.

6.2. Integration with a user authentication system

TODO: for example LDAP


6.3. Integration with a file storage system

TODO: for example local storage, FTP, Samba, NFS etc.


6.4. Integration with a documentation system

TODO: for example wiki


6.5. Integration with a continous integration system

TODO: for example Jenkins
